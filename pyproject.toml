[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "capstone_finance"
version = "0.0.0"
description = "An extensible, agent-friendly Python toolkit for personal finance simulations"
readme = "README.md"
license = {text = "MIT-0"}
authors = [
    {name = "John Carlson", email = "john@example.com"},
]
maintainers = [
    {name = "John Carlson", email = "john@example.com"},
]
keywords = ["finance", "simulation", "monte-carlo", "retirement", "llm"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.11",
    "Topic :: Office/Business :: Financial",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Typing :: Typed",
]
requires-python = ">=3.11"
dependencies = [
    "pydantic>=2.0.0",
    "pyyaml>=6.0.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "pandas-datareader>=0.10.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "matplotlib>=3.6.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "hypothesis>=6.0.0",
    "nbval>=0.10.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
]
docs = [
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0",
]
performance = [
    "numba>=0.57.0",
]

[project.urls]
Homepage = "https://github.com/GGcarlson/Financial-Analysis-Toolkit"
Repository = "https://github.com/GGcarlson/Financial-Analysis-Toolkit"
Documentation = "https://github.com/GGcarlson/Financial-Analysis-Toolkit#readme"
"Bug Tracker" = "https://github.com/GGcarlson/Financial-Analysis-Toolkit/issues"

[project.entry-points."capstone_finance.strategies"]
dummy = "capstone_finance.strategies.dummy:DummyStrategy"
four_percent_rule = "capstone_finance.strategies.four_percent_rule:FourPercentRule"
constant_pct = "capstone_finance.strategies.constant_percentage:ConstantPercentageStrategy"
endowment = "capstone_finance.strategies.endowment:EndowmentStrategy"
guyton_klinger = "capstone_finance.strategies.guyton_klinger:GuytonKlingerStrategy"
vpw = "capstone_finance.strategies.vpw:VariablePercentageWithdrawal"

[project.scripts]
finance-cli = "capstone_finance.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=capstone_finance",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "performance: marks tests as performance tests",
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
